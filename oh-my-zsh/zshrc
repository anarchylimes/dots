# wal colors
(cat ~/.cache/wal/sequences)
# Source the pywal colors.
source ~/.cache/wal/colors.sh

# If you come from bash you might have to change your $PATH.
#export PATH=$PATH:/usr/bin:/usr/local/bin

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# ZSH_THEME="zzzeyez"
#
# p10k
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
source ~/.oh-my-zsh/custom/plugins/powerlevel10k/powerlevel10k.zsh-theme
# [[ ! -f ~/.oh-my-zsh/custom/themes/.p10k.zsh ]] || source ~/.oh-my-zsh/custom/themes/.p10k.zsh
# [[ ! -f ~/.oh-my-zsh/custom/themes/p10k.zsh ]] || source ~/.oh-my-zsh/custom/themes/p10k.zsh
source ~/.oh-my-zsh/custom/themes/.p10k.zsh
source ~/.oh-my-zsh/custom/themes/p10k.zsh

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-syntax-highlighting zsh-autosuggestions zsh-very-colorful-manuals)

source $ZSH/oh-my-zsh.sh
source $ZSH/custom/plugins/zsh-git-prompt/zshrc.sh


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# wal
#if [[ -f ~/.cache/wal/sequences ]] ; then
	#(cat ~/.cache/wal/sequences &)
#fi

# ls
ls() {
  exa --oneline -a "$PWD"
}

# fff file manager
f() {
	source ${HOME}/.config/fff
    fff "$@"
    cd "$(cat "${XDG_CACHE_HOME:=${HOME}/.cache}/fff/.fff_d")"
}

# rm to trash
rm() {
	rmtrash "$@"
}

# cd + ls
# autoload -U add-zsh-hook
# add-zsh-hook -Uz chpwd (){ ls -a; }

# exit
;q() {
	exit
}

# nvim
n() {
  nvim "$@"
}

# cd fzf
c() {
  # workaround because canceling commands does `cd ~`
  FZYDIR="$(fd --hidden --type directory --exclude /.cache --exclude /Library --exclude /.thugpro --exclude /.origin . ~ | fzy)"
  cd "$FZYDIR"
}

# todo list
todo() {
	nvim "${HOME}/text/documents/todo"
}

# delete ds store files
ds() {
	find "${1-.}" -name '.DS_Store' -type f -delete
}

# play thugpro
thugpro() {
	export WINEPREFIX=/Users/zzzeyez/.thugpro WINEARCH=win32
	cd /Users/zzzeyez/.thugpro/drive_c/users/zzzeyez/Local\ Settings/Application\ Data/THUG\ Pro &&
	wine ./THUGProLauncher.exe
}

export TERM=xterm-256color-italic

# remove right padding
ZLE_RPROMPT_INDENT=0
